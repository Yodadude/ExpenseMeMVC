@model ExpenseMeMVC.Models.ExpenseDetailsViewModel
@{
    ViewBag.Title = "ExpenseMe MVC";
}

<div class="container">
    <div class="row">
        <br />
        <form class="form-horizontal" role="form">
            <div class="well">
                <div class="form-group">
                    <label class="control-label col-sm-4">Transaction Date</label>
                    <div class="col-sm-8" style="vertical-align:bottom">
                        <span data-bind="text: TransactionDate"></span>
                    </div>
                </div>
                <div class="form-group ">
                    <label class="control-label col-sm-4">Merchant Name</label>
                    <div class="col-sm-8">
                        <span data-bind="text: MerchantName"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-4">Amount</label>
                    <div class="col-sm-8">
                        <span data-bind="text: Amount"></span>
                    </div>
                </div>
            </div>

            <div class="well" data-bind="with: selectedLineItem">
                <div class="form-group">
                    <label class="control-label col-sm-4">Description</label>
                    <div class="col-sm-8">
                        <input class="form-control" data-bind="value: description" name="description" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-4">Expense Type</label>
                    <div class="col-sm-8">
                        <input class="form-control" data-bind="value: expenseType" name="expenseType" readonly="readonly" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-4">Tax Code</label>
                    <div class="col-sm-8">
                        <input class="form-control" data-bind="value: taxCode, modalex: $parent.showTaxCodeModal" name="taxCode" readonly="readonly" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-4">Amount</label>
                    <div class="col-sm-8">
                        <input class="form-control" data-bind="value: amount" name="amount" />
                    </div>
                </div>
                <div data-bind="foreach: glCodes">
                    <div class="form-group">
                        <label class="control-label col-sm-4" data-bind="text: description"></label>
                        <div class="col-sm-8">
                            <input class="form-control" data-bind="value: code" name="code" readonly="readonly" />
                        </div>
                    </div>
                </div>
            </div>

            <br /><br />
            <button class="btn" data-bind="click: load">Load Data</button>
            <button class="btn" data-bind="click: next, visible: LineItems().length > 0">Next</button>
            <button class="btn" data-bind="click: prev, visible: selectLineItemIndex() >= 0">Prev</button>
            <button class="btn" data-toggle="modal" data-target="#taxCodeModal">Launch demo modal</button>
        </form>
    </div>
</div>

<div class="modal fade" id="taxCodeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Tax Codes</h4>
            </div>
            <div class="modal-body">
                <ul data-bind="foreach: taxCodes">
                    <li data-bind="text: TaxCode"></li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">

        function getTransactionInfo() {

            var data = {};

            $.ajax("/Home/GetExpenseDetailsViewModel", { async: false }).then(function (result) {
                data = result;
            });

            //var data = {
            //    Transaction: {
            //        TransactionDate: "01/01/2014",
            //        MerchantName: "Qantas",
            //        Amount: 515.95
            //    },
            //    lineItems: [{
            //        Description: "Airfare SYD",
            //        ExpenseType: "TRAVEL AIR",
            //        TaxCode: "GST",
            //        Amount: 515.95,
            //        GlValues: [
            //            { segmentId: 1, code: "1000", description: "Company" },
            //            { segmentId: 2, code: "HR", description: "Cost Centre" },
            //            { segmentId: 3, code: "", description: "GL Account" },
            //            { segmentId: 4, code: "", description: "WBS Element" }
            //        ]
            //    },
            //    {
            //        description: "Airfare MEL",
            //        expenseType: "TRAVEL AIR",
            //        taxCode: "GST",
            //        amount: 525.95,
            //        GlValues: [
            //            { segmentId: 1, code: "1000", description: "Company" },
            //            { segmentId: 2, code: "HR", description: "Cost Centre" },
            //            { segmentId: 3, code: "", description: "GL Account" },
            //            { segmentId: 4, code: "", description: "WBS Element" }
            //        ]
            //    }],
            //    taxCodes: [],
            //    expenseTypes: [],
            //    glCodes: []
            //};

            return data;
        }

        function LineItemViewModel(description, expenseType, taxCode, amount, glCodes) {
            this.description = ko.observable(description);
            this.expenseType = ko.observable(expenseType);
            this.taxCode = ko.observable(taxCode);
            this.amount = ko.observable(amount);
            this.glCodes = ko.observableArray(glCodes);
        }

        function GlCodeViewModel(segmentId, code, description) {
            this.segmentId = ko.observable(segmentId);
            this.code = ko.observable(code);
            this.description = ko.observable(description);
        }

        function ExpenseViewModel() {
            var self = this;

            self.TransactionDate = ko.observable();
            self.MerchantName = ko.observable();
            self.Amount = ko.observable();
            self.Purpose = ko.observable("");
            self.LineItems = ko.observableArray();

            self.selectLineItemIndex = ko.observable(-1);
            self.selectedLineItem = ko.observable();

            self.expenseTypes = ko.observableArray();;
            self.taxCodes = ko.observableArray();

            self.load = function () {
                var model = getTransactionInfo();
                self.TransactionDate(model.Transaction.TransactionDate);
                self.MerchantName(model.Transaction.MerchantName);
                self.Amount(model.Transaction.Amount);
                self.taxCodes(model.TaxCodeDetails);
                //var self.taxCodes = JSON.parse(JSON.stringify(model.taxCodes));
                //self.taxCodes.push.apply(self.taxCodes, model.taxCodes);

                model.LineItems.forEach(function (item) {

                    var glCodes = item.GlCodes.map(function (gl) {
                        return new GlCodeViewModel(gl.SegmentId, gl.Code, gl.Name);
                    });

                    self.LineItems.push(new LineItemViewModel(
                        item.Description,
                        item.ExpenseType,
                        item.TaxCode,
                        item.Price,
                        glCodes));
                });
                
                //self.selectLineItemIndex(0);
                //self.selectLineItem();
                self.selectedLineItem(self.LineItems()[0]);
            };

            self.selectLineItem = function () {
                self.selectedLineItem(self.LineItems()[self.selectLineItemIndex()]);
            }

            self.next = function () {
                self.selectedLineItem(self.LineItems()[1]);
                //self.selectLineItemIndex(self.selectLineItemIndex() + 1);
                //self.selectLineItem();
            };

            self.prev = function () {
                self.selectLineItemIndex(self.selectLineItemIndex() - 1);
                self.selectLineItem();
            };

            self.showTaxCodeModal = function () {
                console.log("clicked taxCode");
                $('#taxCodeModal').modal();
            }
        }

        $(function () {

            ko.bindingHandlers.modalex = {
                init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
                    var setupFunction = valueAccessor();
                    $(element).on("click", function () { setupFunction(); });
                }
            };

            var vm = new ExpenseViewModel();
            ko.applyBindings(vm);
            //vm.load();

        });

    </script>
}
